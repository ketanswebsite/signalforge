{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(sqlite3:*)",
      "Bash(node:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(tail:*)",
      "Bash(ls:*)",
      "Bash(npm --version)",
      "Bash(npm rebuild:*)",
      "Bash(wc:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(curl:*)",
      "Bash(openssl rand:*)",
      "Bash(git reset:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Bash(timeout:*)",
      "Bash(true)",
      "Bash(cmd.exe /c deploy-to-render.bat)",
      "Bash(cmd.exe /c quick-deploy.bat)",
      "Bash(./quick-deploy.bat)",
      "WebFetch(domain:stock-proxy.onrender.com)",
      "Bash(./deploy-to-render.bat)",
      "Bash(cat:*)",
      "Bash(jq:*)",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 10 -B 2 \"chart-container|chart-toolbar|chart-zoom-controls\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 15 -B 5 \"\\.chart-container\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 15 -B 5 \"\\.chart-toolbar\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 5 -B 5 \"overflow.*hidden|position.*relative|z-index\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 10 -B 5 \"chart-wrapper|analytics-container|analytics-section\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n -A 10 -B 5 \"chart-wrapper\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -A 20 \"\\.chart-container\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -A 15 \"\\.chart-toolbar\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -A 15 \"\\.chart-zoom-controls\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(/home/keta_joshi/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -B 2 -A 10 \"chart-wrapper|chart-export|export-chart\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/public/styles.css\")",
      "Bash(npm start)",
      "Bash(npm run lint)",
      "Bash(TZ=Europe/London date)",
      "Bash(dos2unix:*)",
      "Bash(npm audit:*)",
      "Bash(SESSION_SECRET=\"weak\" node -e \"\ntry {\n  require(''./config/auth.js'');\n  console.log(''❌ FAILED: Should have rejected weak secret'');\n} catch (err) {\n  console.log(''✅ PASSED: Correctly rejected weak SESSION_SECRET'');\n  console.log(''Error:'', err.message);\n}\n\")",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(DATABASE_URL=\"postgresql://test:test@localhost:5432/test\" TELEGRAM_BOT_TOKEN=\"test_token\" node -e \"\ntry {\n  const telegramBot = require(''./lib/telegram/telegram-bot'');\n  console.log(''✅ SUCCESS: Telegram bot module loaded successfully'');\n  console.log(''Available methods:'', Object.keys(telegramBot));\n} catch (err) {\n  console.log(''❌ FAILED: Could not load telegram bot:'', err.message);\n}\n\")",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(git checkout:*)",
      "Bash(python3:*)",
      "Bash(pkill:*)",
      "Bash(TELEGRAM_WEBHOOK_MODE=true npm start)",
      "Read(//mnt/c/Users/**)",
      "WebSearch",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(if [ -f \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/.env\" ])",
      "Bash(then grep \"DATABASE_URL\" \"/mnt/c/Users/Ketan Joshi/Downloads/stock-proxy (2)/stock-proxy/.env\")",
      "Bash(else echo \"No .env file found\")",
      "Bash(fi)",
      "Bash(if [ -f .env ])",
      "Bash(then grep \"DATABASE_URL\" .env)",
      "Bash(source .env)",
      "Bash(psql:*)",
      "Bash(DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\" NODE_ENV=production node run-migrations.js)",
      "Bash(DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\" NODE_ENV=production node fix-orphaned-data.js)",
      "Bash(DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\" NODE_ENV=production node cleanup-partial-migrations.js)",
      "Bash(DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\" NODE_ENV=production timeout 120 node run-migrations.js)",
      "Bash(DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\" NODE_ENV=production timeout 180 node run-migrations.js)",
      "Bash(export DATABASE_URL=\"postgresql://signalforge_db_user:Xcipr9Wa1KeSWCNPjM9ymyMbD0SENf4R@dpg-d0vgkl95pdvs738glu0g-a.oregon-postgres.render.com/signalforge_db\")",
      "Bash(export NODE_ENV=production)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}